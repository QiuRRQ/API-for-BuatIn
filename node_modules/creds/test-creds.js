
var creds = require('./lib/creds');

///////////////////////////

// provide the credentials
var u = creds.users({
	
	// passwords
	'anonymous': '',
	'admin': 'nimda',
	'user': 'resu',
	
});

// provide the group memberships
var r = creds.roles({
	
	// users
	'anonymous': [],
	
	// let admin be member of all groups, always prevent self memberships and circular memberships
	get admin () { return r.roles.filter(function (role){ return role != 'admin'; }); },
	
	'user': ['users'],
	
	// groups
	'admins': ['users'],
	'users': ['registered'],
	'registered': []

});

///////////////////////////

// now the passwords are kept safe, only user names are directly accessible
u.usernames.forEach(function (username) {
	
	// the password is the user's name in reverse order in this example, anonymous always fails
	var password = username.split('').reverse().join('');
	console.log('check:\n\tuser=%s\n\tpass=%s\n\tresult=%s', username, password, u(username, password));
	
});
console.log('usernames:\n\t%j', u.usernames);

// checks the role memberships
r.roles.forEach(function (role) {
	
	// check all roles against every role
	r.roles.forEach(function (membership) {
		console.log('check:\n\trole=%s\n\tmembership=%s\n\tresult=%s', role, membership, r(role, membership));		
	});
	
});
console.log('roles:\n\t%j', r.roles);
console.log('active roles for admin:\n\t%j', r.activeRoles('admin'));
console.log('active roles for user:\n\t%j', r.activeRoles('user'));

///////////////////////////

